{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/StatItem/StatItem.js","utils/getRandomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TableRow/TableRow.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","defaultProps","StatItem","statItem","label","percentage","getRandomColor","color","i","Math","floor","random","Statistics","title","map","key","id","style","backgroundColor","FriendListItem","friendItem","isOnline","FriendList","friends","friend","TableRow","transaction","type","amount","currency","TransactionHistory","transactions","action","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b51bf707.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Profile.scss';\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.defaultProps = {\r\n  avatar: 'https://dummyimage.com/100x100/000000/0011ff&text=avatar',\r\n  tag: '',\r\n  location: '',\r\n  stats: {\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n  },\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n  }),\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction StatItem({ statItem }) {\r\n  return (\r\n    <>\r\n      <span className=\"label\">{statItem.label}</span>\r\n      <span className=\"percentage\">{statItem.percentage}%</span>\r\n    </>\r\n  );\r\n}\r\n\r\nStatItem.propTypes = {\r\n  statItem: propTypes.shape({\r\n    label: propTypes.string.isRequired,\r\n    percentage: propTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default StatItem;\r\n","function getRandomColor() {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport default getRandomColor;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport StatItem from './StatItem/StatItem';\r\nimport getRandomColor from '../../utils/getRandomColor';\r\nimport './Statistics.scss';\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section className=\"statistics\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n      <ul className=\"stat-list\">\r\n        {stats.map(statItem => (\r\n          <li\r\n            className=\"item\"\r\n            key={statItem.id}\r\n            style={{ backgroundColor: getRandomColor() }}\r\n          >\r\n            <StatItem statItem={statItem} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: propTypes.string,\r\n  stats: propTypes.arrayOf(propTypes.shape({ id: propTypes.string.isRequired }))\r\n    .isRequired,\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction FriendListItem({ friendItem }) {\r\n  return (\r\n    <>\r\n      <span\r\n        className=\"status\"\r\n        style={{\r\n          backgroundColor: friendItem.isOnline ? 'green' : 'red',\r\n        }}\r\n      ></span>\r\n      <img className=\"avatar\" src={friendItem.avatar} alt=\"\"></img>\r\n      <p className=\"name\">{friendItem.name}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  friendItem: propTypes.shape({\r\n    isOnline: propTypes.bool.isRequired,\r\n    avatar: propTypes.string.isRequired,\r\n    name: propTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './FriendList.scss';\r\nimport FriendListItem from './FriendListItem/FriendListItem';\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map(friend => (\r\n        <li className=\"friend-item\" key={friend.id}>\r\n          <FriendListItem friendItem={friend} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: propTypes.arrayOf(\r\n    propTypes.shape({ id: propTypes.number.isRequired }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction TableRow({ transaction }) {\r\n  return (\r\n    <>\r\n      <th>{transaction.type}</th>\r\n      <th>{transaction.amount}</th>\r\n      <th>{transaction.currency}</th>\r\n    </>\r\n  );\r\n}\r\n\r\nTableRow.propTypes = {\r\n  transaction: propTypes.shape({\r\n    type: propTypes.string.isRequired,\r\n    amount: propTypes.string.isRequired,\r\n    currency: propTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './TransactionHistory.scss';\r\nimport TableRow from './TableRow/TableRow';\r\n\r\nfunction TransactionHistory({ transactions }) {\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {transactions.map(action => (\r\n          <tr key={action.id}>\r\n            <TableRow transaction={action} />\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: propTypes.arrayOf(\r\n    propTypes.shape({ id: propTypes.string.isRequired }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from '../Profile/Profile';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FriendList from '../FriendList/FriendList';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\n\r\nimport user from '../../static/user.json';\r\nimport statisticalData from '../../static/statistical-data.json';\r\nimport friends from '../../static/friends.json';\r\nimport transactions from '../../static/transactions.json';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory transactions={transactions} />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}