{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","defaultProps","getRandomColor","color","i","Math","floor","random","Statistics","props","statsList","map","status","key","id","style","backgroundColor","label","percentage","title","FriendList","friendList","friends","friend","isOnline","TransactionHistory","tableRow","items","prop","type","amount","currency","class","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y3GAIA,SAASA,EAAT,GAA0D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAC9C,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,eACb,yBAAKC,IAAKH,EAAQI,IAAI,cAAcF,UAAU,WAC9C,uBAAGA,UAAU,QAAQL,GACrB,uBAAGK,UAAU,OAAb,IAAqBJ,GACrB,uBAAGI,UAAU,YAAYH,IAG3B,wBAAIG,UAAU,SACZ,4BACE,0BAAMA,UAAU,SAAhB,aACA,0BAAMA,UAAU,YAAYD,EAAMI,YAEpC,4BACE,0BAAMH,UAAU,SAAhB,SACA,0BAAMA,UAAU,YAAYD,EAAMK,QAEpC,4BACE,0BAAMJ,UAAU,SAAhB,SACA,0BAAMA,UAAU,YAAYD,EAAMM,UAO5CX,EAAQY,aAAe,CACrBR,OAAQ,4DAWKJ,Q,MCff,SAASa,IAGP,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,EAGMK,MAlCf,SAAoBC,GAClB,IAAMC,EAAYD,EAAMf,MAAMiB,KAAI,SAAAC,GAAM,OACtC,wBACEjB,UAAU,OACVkB,IAAKD,EAAOE,GACZC,MAAO,CAAEC,gBAAiBd,MAE1B,0BAAMP,UAAU,SAASiB,EAAOK,OAChC,0BAAMtB,UAAU,cAAciB,EAAOM,WAArC,SAGJ,OACE,6BAASvB,UAAU,cAChBc,EAAMU,OAAS,wBAAIxB,UAAU,SAASc,EAAMU,OAE7C,wBAAIxB,UAAU,aAAae,K,MCSlBU,MAxBf,SAAoBX,GAClB,IAAMY,EAAaZ,EAAMa,QAAQX,KAAI,SAAAY,GACnC,OACE,wBAAI5B,UAAU,cAAckB,IAAKU,EAAOT,IACtC,0BACEnB,UAAU,SACVoB,MAAO,CACLC,gBAAiBO,EAAOC,SAAW,QAAU,SAGjD,yBAAK7B,UAAU,SAASC,IAAK2B,EAAO9B,OAAQI,IAAI,KAChD,uBAAGF,UAAU,QAAQ4B,EAAOjC,UAIlC,OAAO,wBAAIK,UAAU,eAAe0B,I,MCWvBI,MA1Bf,SAA4BhB,GAC1B,IAAMiB,EAAWjB,EAAMkB,MAAMhB,KAAI,SAAAiB,GAC/B,OACE,wBAAIf,IAAKe,EAAKd,IACZ,4BAAKc,EAAKC,MACV,4BAAKD,EAAKE,QACV,4BAAKF,EAAKG,cAKhB,OACE,2BAAOC,MAAM,uBACX,+BACE,4BACE,oCACA,sCACA,0CAIJ,+BAAQN,K,4BCdC,SAASO,IACtB,OACE,oCACE,kBAAC,EAAD,CACE3C,KAAM4C,EAAK5C,KACXC,IAAK2C,EAAK3C,IACVC,SAAU0C,EAAK1C,SACfC,OAAQyC,EAAKzC,OACbC,MAAOwC,EAAKxC,QAGd,kBAAC,EAAD,CAAYyB,MAAM,eAAezB,MAAOyC,IACxC,kBAAC,EAAD,CAAYb,QAASA,IACrB,kBAAC,EAAD,CAAoBK,MAAOS,KCpBjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACN,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.2b12abe4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Profile.scss';\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"user avatar\" className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.defaultProps = {\r\n  avatar: 'https://dummyimage.com/100x100/000000/0011ff&text=avatar',\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Statistics.scss';\r\n\r\nfunction Statistics(props) {\r\n  const statsList = props.stats.map(status => (\r\n    <li\r\n      className=\"item\"\r\n      key={status.id}\r\n      style={{ backgroundColor: getRandomColor() }}\r\n    >\r\n      <span className=\"label\">{status.label}</span>\r\n      <span className=\"percentage\">{status.percentage}%</span>\r\n    </li>\r\n  ));\r\n  return (\r\n    <section className=\"statistics\">\r\n      {props.title && <h2 className=\"title\">{props.title}</h2>}\r\n\r\n      <ul className=\"stat-list\">{statsList}</ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nfunction getRandomColor() {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FriendList.scss';\r\n\r\nfunction FriendList(props) {\r\n  const friendList = props.friends.map(friend => {\r\n    return (\r\n      <li className=\"friend-item\" key={friend.id}>\r\n        <span\r\n          className=\"status\"\r\n          style={{\r\n            backgroundColor: friend.isOnline ? 'green' : 'red',\r\n          }}\r\n        ></span>\r\n        <img className=\"avatar\" src={friend.avatar} alt=\"\"></img>\r\n        <p className=\"name\">{friend.name}</p>\r\n      </li>\r\n    );\r\n  });\r\n  return <ul className=\"friend-list\">{friendList}</ul>;\r\n}\r\n\r\nFriendList.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TransactionHistory.scss';\r\n\r\nfunction TransactionHistory(props) {\r\n  const tableRow = props.items.map(prop => {\r\n    return (\r\n      <tr key={prop.id}>\r\n        <th>{prop.type}</th>\r\n        <th>{prop.amount}</th>\r\n        <th>{prop.currency}</th>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <table class=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{tableRow}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './components/Profile/Profile';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\n\r\nimport user from './components/Profile/user.json';\r\nimport statisticalData from './components/Statistics/statistical-data.json';\r\nimport friends from './components/FriendList/friends.json';\r\nimport transactions from './components/TransactionHistory/transactions.json';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      ></Profile>\r\n\r\n      <Statistics title=\"Upload stats\" stats={statisticalData}></Statistics>\r\n      <FriendList friends={friends}></FriendList>\r\n      <TransactionHistory items={transactions}></TransactionHistory>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}